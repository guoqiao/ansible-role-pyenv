---

- name: apt install packages
  become: yes
  apt:
    name: "{{item}}"
    state: latest
    update_cache: yes
  with_items:
    - language-pack-en
    - build-essential
    - python3-setuptools
    - python3-pip
    - python3-smbus
    - python3-dev
    - libbz2-dev
    - libc6-dev
    - libdb5.3-dev
    - libexpat1-dev
    - libffi-dev
    - libgdbm-dev
    - liblzma-dev
    - libncurses5-dev
    - libncursesw5-dev
    - libreadline-dev
    - libsqlite3-dev
    - libssl-dev
    - openssl
    - tk-dev
    - zlib1g-dev

- name: add pyenv config to shell rc file
  lineinfile:
    line: "{{item}}"
    path: "{{shell_rc}}"
  with_items:
    - export PATH="$HOME/.pyenv/bin:$PATH"
    - eval "$(pyenv init -)"
    - eval "$(pyenv virtualenv-init -)"

- name: set fact for pyenv_executable
  set_fact:
    pyenv_executable: "{{ansible_env.HOME}}/.pyenv/bin/pyenv"

- name: stat pyenv_executable
  stat:
    path: "{{pyenv_executable}}"
  register: stat_task

- name: download pyenv-installer script
  get_url:
    url: https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer
    dest: /tmp/pyenv-installer
    mode: 0555
  when: stat_task.stat.exists != true

- name: run pyenv-installer script with user shell
  command: /tmp/pyenv-installer
  when: stat_task.stat.exists != true

- name: pyenv update
  command: "{{pyenv_executable}} update"
  when: stat_task.stat.exists == true

- name: pyenv install {{python_version}}
  command: >
    {{pyenv_executable}} install
    --skip-existing {{python_version}}

- name: pyenv virtualenv {{python_version}} {{virtualenv_name}} --force
  command: >
    {{pyenv_executable}} virtualenv
    {{python_version}} {{virtualenv_name}} --force
  when:
    - virtualenv_name is defined

- name: set fact for virtualenv
  set_fact:
    requirements_dest: "/tmp/requirements.txt"
    virtualenv_root: "{{ansible_env.HOME}}/.pyenv/versions/{{virtualenv_name}}"

- name: copy {{requirements_path}} to {{requirements_dest}}
  copy:
    src: "{{requirements_path}}"
    dest: "{{requirements_dest}}"
  when:
    - requirements_path is defined
  tags:
    - requirements

- name: install requirements in virtualenv if required
  command: >
    {{virtualenv_root}}/bin/pip install --upgrade
    --requirement {{requirements_dest}}
  when:
    - virtualenv_name is defined
    - requirements_path is defined
  tags:
    - requirements
